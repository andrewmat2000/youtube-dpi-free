#!/usr/bin/env node
var ge=Object.create;var Se=Object.defineProperty;var Ie=Object.getOwnPropertyDescriptor;var He=Object.getOwnPropertyNames;var be=Object.getPrototypeOf,Pe=Object.prototype.hasOwnProperty;var De=(s,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of He(e))!Pe.call(s,i)&&i!==t&&Se(s,i,{get:()=>e[i],enumerable:!(r=Ie(e,i))||r.enumerable});return s};var _=(s,e,t)=>(t=s!=null?ge(be(s)):{},De(e||!s||!s.__esModule?Se(t,"default",{value:s,enumerable:!0}):t,s));var N=_(require("node:cluster"),1),b=_(require("node:process"),1);var ye=_(require("node:fs"),1),de=_(require("node:process"),1),u=(s,e)=>s in de.default.env?de.default.env[s]:e,p=s=>s!==void 0?`${s}`:void 0,g=s=>s!==void 0?Number.parseInt(s,10):void 0,U=s=>s!==void 0?`${s}`.toLowerCase()==="true":void 0,G=s=>s!==void 0?`${s}`.split(/[\s,]+/):void 0,D=s=>s!==void 0?ye.default.readFileSync(s):void 0;var ve=_(require("node:net"),1),xe=_(require("node:tls"),1);var pe=_(require("node:crypto"),1),ue=_(require("node:dns"),1),me=_(require("node:http2"),1),Ee=_(require("node:net"),1),Te=_(require("node:tls"),1),L=require("node:buffer"),fe=require("node:url");var K=class{#e;#t;#r;constructor(e=-1){this.#e=new le,this.#t=new Map,this.#r=e}get max(){return this.#r}get size(){return this.#e.size}set(e,t,r=-1){let i=r>-1?Date.now()+r*1e3:-1,n=this.#t.get(e);if(n===void 0){let o=new q({key:e,value:t,expiry:i});if(this.#e.insert(o,this.#e.root),this.#t.set(o.data.key,o),this.#r>-1&&this.#r<this.#e.size){let h=this.#e.back();this.#e.remove(h),this.#t.delete(h.data.key)}}else this.#e.move(n,this.#e.root),n.data.value=t,n.data.expiry=i}get(e){let t=this.#t.get(e);if(t!==void 0){if(t.data.expiry>-1&&t.data.expiry<Date.now()){this.#e.remove(t),this.#t.delete(t.data.key);return}return this.#e.move(t,this.#e.root),t.data.value}}delete(e){let t=this.#t.get(e);if(t!==void 0)return this.#e.remove(t),this.#t.delete(t.data.key),t.data.value}*[Symbol.iterator](){for(let e=this.#e.front();e!==void 0;e=this.#e.next(e))yield e.data.value}},le=class{constructor(){this.root=new q,this.root.list=this,this.root.prev=this.root,this.root.next=this.root,this.size=0}back(){return this.size>0?this.root.prev:void 0}front(){return this.size>0?this.root.next:void 0}prev(e){return e.prev!==e.list.root?e.prev:void 0}next(e){return e.next!==e.list.root?e.next:void 0}remove(e){e.list===this&&(e.prev.next=e.next,e.next.prev=e.prev,e.next=null,e.prev=null,e.list=null,this.size--)}insert(e,t){e!==t&&t.list===this&&(e.prev=t,e.next=t.next,e.prev.next=e,e.next.prev=e,e.list=this,this.size++)}move(e,t){e.list===this&&e!==t&&e!==t.next&&t.list===this&&(e.prev.next=e.next,e.next.prev=e.prev,e.prev=t,e.next=t.next,e.prev.next=e,e.next.prev=e)}},q=class{constructor(e){this.data=e,this.list=null,this.prev=null,this.next=null}};var Re=_(require("node:process"),1),ce=class{levels={NONE:0,ERROR:1,WARN:2,INFO:3,DEBUG:4};#e;constructor(e=this.levels.INFO){this.level=e}get level(){return this.#e}set level(e){typeof e=="number"?this.#e=e:this.#e=this.levels[e?.toUpperCase()]??this.levels.NONE}get#t(){return`[${new Date().toISOString()}] [${Re.default.pid}]`}error=(...e)=>{this.level>=this.levels.ERROR&&console.error(this.#t,"[ERROR]",...e)};warn=(...e)=>{this.level>=this.levels.WARN&&console.warn(this.#t,"[WARN]",...e)};info=(...e)=>{this.level>=this.levels.INFO&&console.info(this.#t,"[INFO]",...e)};debug=(...e)=>{this.level>=this.levels.DEBUG&&console.debug(this.#t,"[DEBUG]",...e)}},S=new ce;var Y=class extends Error{constructor(e){super(`Unknown TLS version ${e}`)}},k=class extends Error{constructor(e){super(`Received an invalid request from client ${e.remoteAddress}`)}},F=class extends Error{constructor(e){super(`Received an unknown method from client ${e.remoteAddress}`)}},W=class extends Error{constructor(e){super(`Received an invalid target from client ${e.remoteAddress}`)}},X=class extends Error{constructor(e){super(`Received an unknown HTTP version from client ${e.remoteAddress}`)}},Z=class extends Error{constructor(e,t){super(`Exception occurred while connecting to upstream ${e.remoteAddress}: ${t.message}`)}},M=class extends Error{constructor(e,t){super(`Exception occurred while sending data to upstream ${e.remoteAddress}: ${t.message}`)}},j=class extends Error{constructor(e,t){super(`Exception occurred while sending data to client ${e.remoteAddress}: ${t.message}`)}},Q=class extends Error{constructor(e){super(`Unknown DNS mode ${e}`)}},C=class extends Error{constructor(e){super(`No address found for ${e}`)}},z=class extends Error{constructor(e,t){super(`Certificate validation error, the public key does not match the pinned one
Expected: ${e}
Received: ${t}`)}},H=class extends Error{constructor(e,t,r){t&&(e+=`
Encoded question: ${t.toString("base64")}`),r&&(e+=`
Encoded answer: ${r.toString("base64")}`),super(e)}},B=class extends H{constructor(e,t){super("Answer timeout",e,t)}},J=class extends H{constructor(e,t,r){super(`Answer status ${e}`,t,r)}},ee=class extends H{constructor(e,t){super("Unexpected answer length",e,t)}},te=class extends H{constructor(e,t){super("Unexpected answer ID",e,t)}},se=class extends H{constructor(e,t){super("Unexpected answer flag",e,t)}},re=class extends H{constructor(e,t){super("Unexpected answer count",e,t)}},oe=class extends H{constructor(e,t){super("Unexpected answer question",e,t)}},V=class extends H{constructor(e,t){super("Unexpected answer resource data length",e,t)}};var{HTTP2_HEADER_ACCEPT:we,HTTP2_HEADER_CONTENT_LENGTH:Me,HTTP2_HEADER_CONTENT_TYPE:Ce,HTTP2_HEADER_METHOD:Le,HTTP2_HEADER_PATH:Ae,HTTP2_HEADER_SCHEME:Ne,HTTP2_HEADER_STATUS:Oe,NGHTTP2_REFUSED_STREAM:$e}=me.default.constants,A=class{#e=30;#t=5e3;#r;constructor({dnsMode:e="doh",dnsCacheSize:t=1e5,dohUrl:r="https://1.0.0.1/dns-query",dohTlsServername:i,dohTlsPin:n,dohPersistent:o=!0,dotServer:h="1.0.0.1",dotTlsServername:d,dotTlsPin:m}={}){this.dnsMode=e,this.dnsCache=new K(t),this.dohUrl=new fe.URL(r),i?this.dohTlsServername=i:Ee.default.isIP(this.dohUrl.hostname)===0&&(this.dohTlsServername=this.dohUrl.hostname),this.dohTlsPin=n,this.dohPersistent=o,this.dotServer=new fe.URL(`tls://${h}`),d?this.dotTlsServername=d:Ee.default.isIP(this.dotServer.hostname)===0&&(this.dotTlsServername=this.dotServer.hostname),this.dotTlsPin=m}async resolve(e){let t=await Promise.all([6,4].map(async r=>{let i=`${e},${r}`,n=this.dnsCache.get(i);if(n===void 0){S.debug(`Resolving ${e} (${r})`);let o=await this.#h(e,r);S.debug(`Resolved ${e} (${r}) to ${o.address}`),this.dnsCache.set(i,o.address,o.ttl),n=o.address}return{address:n,family:r}}));if(t=t.filter(({address:r})=>r!==null),t.length===0)throw new C(e);return t}#h(...e){switch(this.dnsMode){case"plain":return this.#d(...e);case"doh":return this.#s(...e);case"dot":return this.#l(...e);default:throw new Q(this.dnsMode)}}#d(e,t){return new Promise(r=>{(t===6?ue.default.resolve6:ue.default.resolve4)(e,{ttl:!0},(n,o)=>{n||o.length===0||t===6&&o[0].address.startsWith("::ffff:")?r({address:null,ttl:this.#e}):r({address:o[0].address,ttl:o[0].ttl})})})}#s(e,t,r=0){return new Promise((i,n)=>{let o=this.#o(e,t),h=this.dohPersistent?this.#r:void 0;(h===void 0||h.destroyed||h.closed)&&(S.debug(`Connecting to DoH server ${this.dohUrl.host}`),h=me.default.connect(this.dohUrl.origin,{servername:this.dohTlsServername,createConnection:()=>{let c;try{c=Te.default.connect({host:this.dohUrl.hostname,port:this.dohUrl.port?Number.parseInt(this.dohUrl.port,10):443,servername:this.dohTlsServername,ALPNProtocols:["h2"],rejectUnauthorized:typeof this.dohTlsServername=="string"||typeof this.dohTlsPin!="string"})}catch(v){h.destroy(v);return}return c.on("error",v=>{h.destroy(v)}),c.on("secureConnect",()=>{if(typeof this.dohTlsPin=="string"){let v=c.getPeerX509Certificate(),R=this.#c(v);this.dohTlsPin!==R&&h.destroy(new z(this.dohTlsPin,R))}}),c}}),h.on("error",c=>{n(c)}),this.dohPersistent&&(this.#r=h,this.#r.unref()));let d=h.request({[Le]:"POST",[Ne]:"https",[Ae]:this.dohUrl.pathname,[we]:"application/dns-message",[Ce]:"application/dns-message",[Me]:String(o.length)});d.setTimeout(this.#t),d.on("timeout",()=>{d.destroy(new B(o))}),d.on("error",c=>{d.rstCode===$e&&r<5?i(new Promise(v=>{r++;let R=2**(r+Math.random())*20|0;S.debug(`REFUSED_STREAM received, retrying in ${R}ms`),setTimeout(()=>v(this.#s(e,t,r)),R)})):n(c.cause??c)}),d.on("response",c=>{let v=c[Oe];v!==200&&d.destroy(new J(v,o))});let m=[];d.on("data",c=>m.push(c)),d.on("end",()=>{if(this.dohPersistent||h.close(),m.length>0)try{i(this.#n(o,L.Buffer.concat(m)))}catch(c){n(c)}}),d.end(o)})}#l(e,t){return new Promise((r,i)=>{let n=this.#o(e,t),o;try{o=Te.default.connect({host:this.dotServer.hostname,port:this.dotServer.port||853,servername:this.dotTlsServername,ALPNProtocols:["dot"],rejectUnauthorized:typeof this.dotTlsServername=="string"||typeof this.dotTlsPin!="string"})}catch(h){i(h);return}o.setTimeout(this.#t),o.on("timeout",()=>{o.destroy(new B(n))}),o.on("error",h=>{i(h)}),o.on("secureConnect",()=>{if(typeof this.dotTlsPin=="string"){let d=o.getPeerX509Certificate(),m=this.#c(d);if(this.dotTlsPin!==m){o.destroy(new z(this.dotTlsPin,m));return}}let h=L.Buffer.alloc(2);h.writeUInt16BE(n.byteLength,0),o.write(L.Buffer.concat([h,n]))}),o.on("data",h=>{o.destroy();try{if(h.readUInt16BE(0)!==h.byteLength-2)throw new ee(n,h);r(this.#n(n,h.subarray(2)))}catch(d){i(d)}})})}#o(e,t){return L.Buffer.from([...pe.default.randomBytes(2),1,0,0,1,0,0,0,0,0,0,...this.#a(e),0,t===6?28:1,0,1])}#n(e,t){let r=0,i=e.readUInt16BE(0);if(t.readUInt16BE(r)!==i)throw new te(e,t);let o=t.readUInt16BE(r+=2),h=o>>15&1,d=o>>11&15,m=o>>9&1,c=o&15;if(h!==1||d!==0||m!==0||c>15)throw new se(e,t);let v=t.readUInt16BE(r+=2),R=t.readUInt16BE(r+=2),E=t.readUInt16BE(r+=2),y=t.readUInt16BE(r+=2);if(v!==1)throw new re(e,t);let[,T]=this.#i(t,r+=2),f=t.readUInt16BE(r+=T),x=t.readUInt16BE(r+=2);if(f!==1&&f!==28||x!==1)throw new oe(e,t);r+=2;for(let w=0;w<R+E+y;w++){let[,O]=this.#i(t,r),$=t.readUInt16BE(r+=O),_e=t.readUInt16BE(r+=2),ie=t.readUInt32BE(r+=2),ae=t.readUInt16BE(r+=4),he=t.slice(r+=2,r+=ae);if(_e===1){if($===1&&$===f){if(ae!==4)throw new V(e,t);let P="";for(let I=0;I<4;I++)I!==0&&(P+="."),P+=he[I].toString(10);return{address:P,ttl:ie}}if($===28&&$===f){if(ae!==16)throw new V(e,t);let P="";for(let I=0;I<16;I+=2)I!==0&&(P+=":"),P+=(he[I]<<8|he[I+1]).toString(16);return{address:P,ttl:ie}}if($===6)return{address:null,ttl:ie}}}return{address:null,ttl:this.#e}}#a(e){let t=[];for(let r of e.split("."))if(r.length!==0){t.push(r.length);for(let i of r)t.push(i.charCodeAt(0))}return t.push(0),L.Buffer.from(t)}#i(e,t=0){let r=[],i=0,n=e.readUInt8(t);if(n===0)return[".",1];if(n>=192){let[h]=this.#i(e,e.readUInt16BE(t)-49152);return[h,2]}for(;n>0;){if(n>=192){let[h]=this.#i(e,e.readUInt16BE(t)-49152);r.push(h);let d=r.join(".");return i+=2,[d,i]}r.push(e.toString("utf8",++t,t+n)),i+=n+1,n=e.readUInt8(t+=n)}let o=r.join(".");return i+=1,[o,i]}#c(e){let t=e.publicKey.export({type:"spki",format:"der"});return pe.default.createHash("sha256").update(t).digest("base64")}};var ne=class{#e=[];#t=new Set(["HTTP/1.0","HTTP/1.1"]);#r=new Set(["GET","HEAD","POST","PUT","DELETE","CONNECT","OPTIONS","TRACE","PATCH"]);#h=new Map([["1.0",769],["1.1",770],["1.2",771],["1.3",772]]);constructor({addrs:e=["[::]:8080"],hosts:t=[],tlsCa:r,tlsKey:i,tlsCert:n,inactivityTimeout:o=6e4,happyEyeballs:h=!1,happyEyeballsTimeout:d=250,httpsClientHelloSize:m=40,httpsClientHelloTLSv:c="1.3",httpNewlineSeparator:v=`\r
`,httpMethodSeparator:R=" ",httpTargetSeparator:E=" ",httpHostHeaderSeparator:y=":",httpMixHostHeaderCase:T=!0,resolver:f=new A}={}){if(this.#e=e.map(x=>new URL(/^[a-z0-9.+-]+:\/\//i.test(x)?x:`http://${x}`)),this.hosts=new Set(t),this.tlsCa=r,this.tlsKey=i,this.tlsCert=n,this.inactivityTimeout=o,this.happyEyeballs=h,this.happyEyeballsTimeout=d,this.httpsClientHelloSize=m,this.#h.has(c))this.httpsClientHelloTLSv=this.#h.get(c);else throw new Y(c);this.httpNewlineSeparator=this.#p(v),this.httpMethodSeparator=this.#p(R),this.httpTargetSeparator=this.#p(E),this.httpHostHeaderSeparator=this.#p(y),this.httpMixHostHeaderCase=T,this.resolver=f,this.servers=new Set,this.sockets=new Set}async start(){for(let e of this.#e){let t=e.protocol==="https:",r=e.hostname.match(/^\[(.+)\]$/)?.[1]??e.hostname,i=e.port?Number.parseInt(e.port,10):t?443:80,n;t?(n=xe.default.createServer({ca:this.tlsCa,key:this.tlsKey,cert:this.tlsCert,ALPNProtocols:["http/1.1"],requestCert:this.tlsCa!==void 0},this.#d),n.on("tlsClientError",(o,h)=>{this.#s(h),this.#n(o)})):n=ve.default.createServer(this.#d),this.servers.add(n),n.on("close",()=>this.servers.delete(n)),await new Promise((o,h)=>{n.on("listening",()=>o()),n.on("error",d=>h(d)),n.listen(i,r)})}return this.servers}async stop(){for(let e of this.sockets)this.#s(e);for(let e of this.servers)await new Promise(t=>{e.listening?e.close(t):t()})}#d=e=>{let t=new ve.default.Socket;this.sockets.add(e),this.sockets.add(t),e.setTimeout(this.inactivityTimeout),t.setTimeout(this.inactivityTimeout),e.on("timeout",()=>{this.#l(e,t)}),t.on("timeout",()=>{this.#l(t,e)}),e.on("close",()=>{this.#o(e,t)}),t.on("close",()=>{this.#o(t,e)}),e.on("error",r=>{this.#n(r)}),t.on("error",r=>{this.#n(r)}),e.once("data",r=>{e.pause();let i=this.#a(r,0);if(i.data===void 0){this.#s(e,new k(e));return}let n=this.#i(i.data,[9,32],3);if(n.length!==3){this.#s(e,new k(e));return}let o=n[0].toString("utf8");if(!this.#r.has(o)){this.#s(e,new F(e));return}let h=o==="CONNECT",d=n[1].toString("utf8"),{host:m,port:c}=this.#c(d);if(m===void 0){this.#s(e,new W(e));return}c===void 0&&(c=h?443:80);let v=this.hosts.size===0||this.hosts.has(m),R=n[2].toString("utf8");if(!this.#t.has(R)){this.#s(e,new X(e));return}try{S.debug(`Connecting to upstream ${m}:${c}`),t.connect({host:m,port:c,autoSelectFamily:this.happyEyeballs,autoSelectFamilyAttemptTimeout:this.happyEyeballsTimeout,lookup:(E,y,T)=>{this.resolver.resolve(E).then(f=>{if(y?.all)T(null,f);else{let{address:x,family:w}=f.find(({family:O})=>O===4)??f.find(({family:O})=>O===6);T(null,x,w)}},f=>T(f))}})}catch(E){this.#s(e,new Z(t,E));return}if(h){v?e.once("data",E=>{t.pipe(e).pipe(t);let y=E.readUInt8(0)===22;y&&E.writeUInt16BE(this.httpsClientHelloTLSv,1);try{if(y&&this.httpsClientHelloSize>0){let T=this.httpsClientHelloSize;for(let f=0;f<E.length;f+=T)t.write(E.subarray(f,f+T))}else t.write(E)}catch(T){this.#s(t,new M(t,T));return}}):t.pipe(e).pipe(t);try{e.write(`HTTP/1.1 200 Connection Established\r
\r
`)}catch(E){this.#s(e,new j(e,E));return}}else{t.pipe(e).pipe(t);let E=0;if(v){let y=o+this.httpMethodSeparator+d+this.httpTargetSeparator+R+this.httpNewlineSeparator;E+=i.size;let T=this.#a(r,E);for(;T.data!==void 0&&T.data.byteLength!==0;){if(T.data.subarray(0,5).toString("utf8").toLowerCase()==="host:"){let x="Host",w=T.data.subarray(5).toString("utf8").trim();y+=(this.httpMixHostHeaderCase?this.#u(x):x)+this.httpHostHeaderSeparator+w+this.httpNewlineSeparator}else{let x=T.data.toString("utf8");y+=x+this.httpNewlineSeparator}E+=T.size,T=this.#a(r,E)}try{t.write(y)}catch(f){this.#s(t,new M(t,f));return}}try{t.write(r.subarray(E))}catch(y){this.#s(t,new M(t,y));return}}e.resume()})};#s(e,t){e&&!e.destroyed&&(e.connecting?e.on("connect",()=>e.destroy(t)):e.destroy(t))}#l(...e){this.#o(...e)}#o(e,t){this.sockets.delete(e),this.#s(t)}#n(e){e instanceof C?S.debug(e.message):e.message?.length>0&&(e.code==="ENETUNREACH"?S.error(e.message):e.code!=="ECONNRESET"&&e.code!=="EPIPE"&&S.error(e))}#a(e,t=0){let r,i,n=t,o=e.indexOf(10,n);return o>0?(r=e.subarray(n,e[o-1]===13?o-1:o),i=o-n+1):t<e.byteLength&&(r=e.subarray(t),i=r.byteLength),{data:r,size:i}}#i(e,t,r=-1,i=0){let n=[],o=i,h=-1;for(let d=i;d<e.length;d++)if(t.includes(e[d])){if(o<=h){if(r>-1&&r<=n.length)break;n.push(e.subarray(o,h+1))}o=d+1,h=-1}else h=d;return o<e.length&&n.push(e.subarray(o)),n}#c(e){let t,r,i=e.match(/^\/?(?:[a-z0-9.+-]+:\/\/)?(?:\[?([^/]+?)\]?)(?::([0-9]+))?(?:\/.*)?$/i);return i!==null&&(i[1]!==void 0&&(t=i[1].toLowerCase()),i[2]!==void 0&&(r=Number.parseInt(i[2],10))),{host:t,port:r}}#u(e){let t="";for(let r=0;r<e.length;r++)t+=r%2===0?e[r].toLowerCase():e[r].toUpperCase();return t}#p(e){return e.replace(/\\0/g,"\0").replace(/\\b/g,"\b").replace(/\\f/g,"\f").replace(/\\n/g,`
`).replace(/\\r/g,"\r").replace(/\\t/g,"	").replace(/\\v/g,"\v")}};var a={addrs:G(u("DEMERGI_ADDRS")),hosts:G(u("DEMERGI_HOSTS")),workers:g(u("DEMERGI_WORKERS")),tlsCa:D(u("DEMERGI_TLS_CA")),tlsKey:D(u("DEMERGI_TLS_KEY")),tlsCert:D(u("DEMERGI_TLS_CERT")),inactivityTimeout:g(u("DEMERGI_INACTIVITY_TIMEOUT")),happyEyeballs:U(u("DEMERGI_HAPPY_EYEBALLS")),happyEyeballsTimeout:g(u("DEMERGI_HAPPY_EYEBALLS_TIMEOUT")),dnsMode:p(u("DEMERGI_DNS_MODE")),dnsCacheSize:g(u("DEMERGI_DNS_CACHE_SIZE")),dohUrl:p(u("DEMERGI_DOH_URL")),dohTlsServername:p(u("DEMERGI_DOH_TLS_SERVERNAME")),dohTlsPin:p(u("DEMERGI_DOH_TLS_PIN")),dotServer:p(u("DEMERGI_DOT_SERVER")),dotTlsServername:p(u("DEMERGI_DOT_TLS_SERVERNAME")),dotTlsPin:p(u("DEMERGI_DOT_TLS_PIN")),httpsClientHelloSize:g(u("DEMERGI_HTTPS_CLIENTHELLO_SIZE")),httpsClientHelloTLSv:p(u("DEMERGI_HTTPS_CLIENTHELLO_TLSV")),httpNewlineSeparator:p(u("DEMERGI_HTTP_NEWLINE_SEPARATOR")),httpMethodSeparator:p(u("DEMERGI_HTTP_METHOD_SEPARATOR")),httpTargetSeparator:p(u("DEMERGI_HTTP_TARGET_SEPARATOR")),httpHostHeaderSeparator:p(u("DEMERGI_HTTP_HOST_HEADER_SEPARATOR")),httpMixHostHeaderCase:U(u("DEMERGI_HTTP_MIX_HOST_HEADER_CASE")),logLevel:p(u("DEMERGI_LOG_LEVEL"))},l=b.default.argv.slice(2);e:for(let s=0;s<l.length;s++)switch(l[s]){case"-A":case"--addrs":a.addrs=G(l[++s]);break;case"-H":case"--hosts":a.hosts=G(l[++s]);break;case"-W":case"--workers":a.workers=g(l[++s]);break;case"--tls-ca":a.tlsCa=D(l[++s]);break;case"--tls-key":a.tlsKey=D(l[++s]);break;case"--tls-cert":a.tlsCert=D(l[++s]);break;case"--inactivity-timeout":a.inactivityTimeout=g(l[++s]);break;case"--happy-eyeballs":a.happyEyeballs=U(l[++s]);break;case"--happy-eyeballs-timeout":a.happyEyeballsTimeout=g(l[++s]);break;case"--dns-mode":a.dnsMode=p(l[++s]);break;case"--dns-cache-size":a.dnsCacheSize=g(l[++s]);break;case"--doh-url":a.dohUrl=p(l[++s]);break;case"--doh-tls-servername":a.dohTlsServername=p(l[++s]);break;case"--doh-tls-pin":a.dohTlsPin=p(l[++s]);break;case"--dot-server":a.dotServer=p(l[++s]);break;case"--dot-tls-servername":a.dotTlsServername=p(l[++s]);break;case"--dot-tls-pin":a.dotTlsPin=p(l[++s]);break;case"--https-clienthello-size":a.httpsClientHelloSize=g(l[++s]);break;case"--https-clienthello-tlsv":a.httpsClientHelloTLSv=p(l[++s]);break;case"--http-newline-separator":a.httpNewlineSeparator=p(l[++s]);break;case"--http-method-separator":a.httpMethodSeparator=p(l[++s]);break;case"--http-target-separator":a.httpTargetSeparator=p(l[++s]);break;case"--http-host-header-separator":a.httpHostHeaderSeparator=p(l[++s]);break;case"--http-mix-host-header-case":a.httpMixHostHeaderCase=U(l[++s]);break;case"-l":case"--log-level":a.logLevel=p(l[++s]);break;case"-v":case"--version":console.log("Demergi 2.2.3"),b.default.exit(0);break;case"-h":case"--help":console.log(["Usage: demergi [OPTION]...","","A proxy server that helps to bypass the DPI systems implemented by various ISPs.","","Proxy:","  -A, --addrs STR, $DEMERGI_ADDRS","  The address list separated by commas or spaces to bind the server to",'  ("[::]:8080" by default).',"","  -H, --hosts STR, $DEMERGI_HOSTS","  The host list separated by commas or spaces to apply the evasion techniques,","  will be applied to all hosts if unspecified (unspecified by default).","","  -W, --workers NUM, $DEMERGI_WORKERS","  The number of workers (0 by default).","","  --tls-ca STR, $DEMERGI_TLS_CA","  Path to the TLS certificate bundle used to verify the client identity","  (unspecified by default).","","  --tls-key STR, $DEMERGI_TLS_KEY","  Path to the server TLS key (unspecified by default).","","  --tls-cert STR, $DEMERGI_TLS_CERT","  Path to the server TLS certificate (unspecified by default).","","  --inactivity-timeout NUM, $DEMERGI_INACTIVITY_TIMEOUT","  Maximum time in ms before the connection is closed due to inactivity","  (60000 by default).","","  --happy-eyeballs BOOL, $DEMERGI_HAPPY_EYEBALLS","  Enable Happy Eyeballs algorithm (RFC 8305) (EXPERIMENTAL) (false by default).","","  --happy-eyeballs-timeout NUM, $DEMERGI_HAPPY_EYEBALLS_TIMEOUT","  Maximum time in ms for IPv6 before trying IPv4 (250 by default).","","Resolver:","  --dns-mode STR, $DEMERGI_DNS_MODE",'  The DNS resolver mode, valid values are "plain", "doh" and "dot" ("doh" by',"  default).","","  --dns-cache-size NUM, $DEMERGI_DNS_CACHE_SIZE","  The maximum number of entries in the DNS cache (100000 by default).","","  --doh-url STR, $DEMERGI_DOH_URL",'  The DoH server URL ("https://1.0.0.1/dns-query" by default).',"","  --doh-tls-servername STR, $DEMERGI_DOH_TLS_SERVERNAME","  The server name to check in the DoH server certificate (unspecified by","  default).","","  --doh-tls-pin STR, $DEMERGI_DOH_TLS_PIN","  The pin to check in the DoH server certificate. The pin must be a base64","  encoded SHA256 hash of the public key (unspecified by default).","","  --dot-server STR, $DEMERGI_DOT_SERVER",'  The DoT server host and optionally port ("1.0.0.1" by default).',"","  --dot-tls-servername STR, $DEMERGI_DOT_TLS_SERVERNAME","  The server name to check in the DoT server certificate (unspecified by","  default).","","  --dot-tls-pin STR, $DEMERGI_DOT_TLS_PIN","  The pin to check in the DoT server certificate. The pin must be a base64","  encoded SHA256 hash of the public key (unspecified by default).","","HTTPS:","  --https-clienthello-size NUM, $DEMERGI_HTTPS_CLIENTHELLO_SIZE","  The maximum chunk size in bytes for the ClientHello packet. A less than 1","  value disables fragmentation (40 by default).","","  --https-clienthello-tlsv STR, $DEMERGI_HTTPS_CLIENTHELLO_TLSV","  The TLS protocol version to set in the ClientHello packet, valid values are",'  "1.0", "1.1", "1.2" and "1.3" ("1.3" by default).',"","HTTP:","  --http-newline-separator STR, $DEMERGI_HTTP_NEWLINE_SEPARATOR",'  The string to use to separate new lines ("\\r\\n" by default).',"","  --http-method-separator STR, $DEMERGI_HTTP_METHOD_SEPARATOR",'  The string to use to separate the HTTP method from the target (" " by',"  default).","","  --http-target-separator STR, $DEMERGI_HTTP_TARGET_SEPARATOR",'  The string to use to separate the target from the HTTP version (" " by',"  default).","","  --http-host-header-separator STR, $DEMERGI_HTTP_HOST_HEADER_SEPARATOR",'  The string to use to separate the host header key from its value (":" by',"  default).","","  --http-mix-host-header-case BOOL, $DEMERGI_HTTP_MIX_HOST_HEADER_CASE","  Alternate upper and lower case in the host header (true by default).","","Info:","  -l, --log-level STR, $DEMERGI_LOG_LEVEL",'  The log level, valid values are "debug", "info", "warn", "error" and "none"','  ("info" by default).',"","  -v, --version","  Show version and quit.","","  -h, --help","  Show this help and quit."].join(`
`)),b.default.exit(0);break;case"--":break e;default:console.log([`Illegal option "${l[s]}".`,'Try "--help" for usage information.'].join(`
`)),b.default.exit(1)}a.logLevel?.length>0&&(S.level=a.logLevel);if(a.workers>0&&N.default.isPrimary){N.default.on("online",s=>{S.debug(`Worker ${s.process.pid} started`)}),N.default.on("exit",(s,e,t)=>{S.debug(`Worker ${s.process.pid} died (${t||e})`)});for(let s of["SIGINT","SIGTERM"])b.default.once(s,e=>{S.info("Exiting");for(let t in Object.values(N.default.workers))t.process?.kill(e)});for(let s=0;s<a.workers;s++)N.default.fork()}else{let s=new ne({addrs:a.addrs,hosts:a.hosts,tlsCa:a.tlsCa,tlsKey:a.tlsKey,tlsCert:a.tlsCert,inactivityTimeout:a.inactivityTimeout,happyEyeballs:a.happyEyeballs,happyEyeballsTimeout:a.happyEyeballsTimeout,httpsClientHelloSize:a.httpsClientHelloSize,httpsClientHelloTLSv:a.httpsClientHelloTLSv,httpNewlineSeparator:a.httpNewlineSeparator,httpMethodSeparator:a.httpMethodSeparator,httpTargetSeparator:a.httpTargetSeparator,httpHostHeaderSeparator:a.httpHostHeaderSeparator,httpMixHostHeaderCase:a.httpMixHostHeaderCase,resolver:new A({dnsMode:a.dnsMode,dnsCacheSize:a.dnsCacheSize,dohUrl:a.dohUrl,dohTlsServername:a.dohTlsServername,dohTlsPin:a.dohTlsPin,dotServer:a.dotServer,dotTlsServername:a.dotTlsServername,dotTlsPin:a.dotTlsPin})});(async()=>{let e=await s.start();for(let t of e){let{address:r,family:i,port:n}=t.address();i==="IPv6"&&(r=`[${r}]`),S.info(`Listening on ${r}:${n}`)}for(let t of["SIGINT","SIGTERM"])b.default.once(t,async()=>{S.info("Exiting"),await s.stop(),b.default.exit(0)})})()}
